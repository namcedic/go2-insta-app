Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"ALL\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0131f8b6-8380-4a5b-92de-cac124ac9e57\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/modules/user/usermodel/filter.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_9_3_2022_10_34_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_9_3_2022_10_34_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/modules/commentlike/commentlikemodel/comment_likes.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/modules/commentlike/commentlikemodel/comment_likes.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/modules/post/postbiz/update_post.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/modules/post/postbiz/update_post.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/modules/post/postmodel/post.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/modules/post/postmodel/post.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/modules/post/poststorage/update.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/modules/post/poststorage/update.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/modules/post/posttransport/ginpost/update_post.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/modules/post/posttransport/ginpost/update_post.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/modules/user/userbiz/search_by_name.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/modules/user/userbiz/search_by_name.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/modules/user/userstorage/find.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/modules/user/userstorage/find.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/modules/user/usertransport/ginuser/search_by_name.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/modules/user/usertransport/ginuser/search_by_name.go\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Go File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"GOROOT\" url=\"file://$PROJECT_DIR$/../../../../../../Program Files/Go\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"GoLibraries\">\r\n    <option name=\"indexEntireGoPath\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"25Yf3LxQllyL7K73D5WHtuT2IWV\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"DefaultGoTemplateProperty\" value=\"Go File\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"go.format.on.save.advertiser.fired\" value=\"true\" />\r\n    <property name=\"go.formatter.settings.were.checked\" value=\"true\" />\r\n    <property name=\"go.import.settings.migrated\" value=\"true\" />\r\n    <property name=\"go.modules.go.list.on.any.changes.was.set\" value=\"true\" />\r\n    <property name=\"go.sdk.automatically.set\" value=\"true\" />\r\n    <property name=\"go.watchers.conflict.with.on.save.actions.check.performed\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\PC\\OneDrive\\Máy tính\\Go2insta\\golang-2-final-exam\\modules\\user\\usertransport\\ginuser\" />\r\n      <recent name=\"C:\\Users\\PC\\OneDrive\\Máy tính\\Go2insta\\golang-2-final-exam\\modules\\user\\userbiz\" />\r\n      <recent name=\"C:\\Users\\Admin\\go\\src\\golang-2-final-exam\\modules\\post\\posttransport\\ginpost\" />\r\n      <recent name=\"C:\\Users\\Admin\\go\\src\\golang-2-final-exam\\modules\\post\\poststorage\" />\r\n      <recent name=\"C:\\Users\\Admin\\go\\src\\golang-2-final-exam\\modules\\post\\postbiz\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Admin\\go\\src\\golang-2-final-exam\\modules\\comment\\transport\\ginreplycomment\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\">\r\n      <module name=\"golang-2-final-exam\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"golang-2-final-exam\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"go build instago2\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"golang-2-final-exam\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"instago2\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$/main.go\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"GoTestRunConfiguration\" factoryName=\"Go Test\">\r\n      <module name=\"golang-2-final-exam\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"DIRECTORY\" />\r\n      <package value=\"golang-2-final-exam\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <framework value=\"gotest\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Go Build.go build instago2\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VgoProject\">\r\n    <integration-enabled>true</integration-enabled>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/middleware/authorize.go</url>\r\n          <line>67</line>\r\n          <option name=\"timeStamp\" value=\"16\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/comment/transport/ginreplycomment/reply_transport.go</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"33\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/comment/biz/create_reply.go</url>\r\n          <line>22</line>\r\n          <option name=\"timeStamp\" value=\"38\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/comment/biz/create_reply.go</url>\r\n          <line>24</line>\r\n          <option name=\"timeStamp\" value=\"39\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/comment/biz/create_reply.go</url>\r\n          <line>25</line>\r\n          <option name=\"timeStamp\" value=\"40\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/comment/biz/create_reply.go</url>\r\n          <line>27</line>\r\n          <option name=\"timeStamp\" value=\"41\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/comment/biz/create_reply.go</url>\r\n          <line>28</line>\r\n          <option name=\"timeStamp\" value=\"42\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/comment/biz/create_reply.go</url>\r\n          <line>30</line>\r\n          <option name=\"timeStamp\" value=\"43\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/comment/biz/create_reply.go</url>\r\n          <line>31</line>\r\n          <option name=\"timeStamp\" value=\"44\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/comment/biz/create_reply.go</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"45\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/comment/biz/create_reply.go</url>\r\n          <line>35</line>\r\n          <option name=\"timeStamp\" value=\"46\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>\r\n          <line>24</line>\r\n          <option name=\"timeStamp\" value=\"48\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>\r\n          <line>26</line>\r\n          <option name=\"timeStamp\" value=\"50\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>\r\n          <line>28</line>\r\n          <option name=\"timeStamp\" value=\"51\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>\r\n          <line>35</line>\r\n          <option name=\"timeStamp\" value=\"52\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>\r\n          <line>38</line>\r\n          <option name=\"timeStamp\" value=\"53\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"54\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>15</line>\r\n          <option name=\"timeStamp\" value=\"66\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>18</line>\r\n          <option name=\"timeStamp\" value=\"67\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>17</line>\r\n          <option name=\"timeStamp\" value=\"68\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>21</line>\r\n          <option name=\"timeStamp\" value=\"69\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>23</line>\r\n          <option name=\"timeStamp\" value=\"70\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>25</line>\r\n          <option name=\"timeStamp\" value=\"71\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>29</line>\r\n          <option name=\"timeStamp\" value=\"72\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>31</line>\r\n          <option name=\"timeStamp\" value=\"73\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>32</line>\r\n          <option name=\"timeStamp\" value=\"74\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>37</line>\r\n          <option name=\"timeStamp\" value=\"76\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>38</line>\r\n          <option name=\"timeStamp\" value=\"77\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>40</line>\r\n          <option name=\"timeStamp\" value=\"78\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>\r\n          <line>43</line>\r\n          <option name=\"timeStamp\" value=\"79\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/main.go</url>\r\n          <line>95</line>\r\n          <option name=\"timeStamp\" value=\"80\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_following_post.go</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"92\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_following_post.go</url>\r\n          <line>38</line>\r\n          <option name=\"timeStamp\" value=\"93\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/postbiz/list_following_post.go</url>\r\n          <line>29</line>\r\n          <option name=\"timeStamp\" value=\"97\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/postbiz/list_following_post.go</url>\r\n          <line>35</line>\r\n          <option name=\"timeStamp\" value=\"100\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/poststorage/list_following.go</url>\r\n          <line>12</line>\r\n          <option name=\"timeStamp\" value=\"101\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/poststorage/list_following.go</url>\r\n          <line>14</line>\r\n          <option name=\"timeStamp\" value=\"102\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/poststorage/list_following.go</url>\r\n          <line>19</line>\r\n          <option name=\"timeStamp\" value=\"106\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/poststorage/list_following.go</url>\r\n          <line>24</line>\r\n          <option name=\"timeStamp\" value=\"108\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/poststorage/list_following.go</url>\r\n          <line>23</line>\r\n          <option name=\"timeStamp\" value=\"109\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/poststorage/list_following.go</url>\r\n          <line>27</line>\r\n          <option name=\"timeStamp\" value=\"110\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/poststorage/list_following.go</url>\r\n          <line>28</line>\r\n          <option name=\"timeStamp\" value=\"111\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/poststorage/list_following.go</url>\r\n          <line>29</line>\r\n          <option name=\"timeStamp\" value=\"112\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/poststorage/list_following.go</url>\r\n          <line>32</line>\r\n          <option name=\"timeStamp\" value=\"113\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/modules/post/poststorage/list_following.go</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"114\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/finisher_api.go</url>\r\n          <line>157</line>\r\n          <option name=\"timeStamp\" value=\"115\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/finisher_api.go</url>\r\n          <line>161</line>\r\n          <option name=\"timeStamp\" value=\"116\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/finisher_api.go</url>\r\n          <line>164</line>\r\n          <option name=\"timeStamp\" value=\"117\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/finisher_api.go</url>\r\n          <line>165</line>\r\n          <option name=\"timeStamp\" value=\"118\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/finisher_api.go</url>\r\n          <line>158</line>\r\n          <option name=\"timeStamp\" value=\"119\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>277</line>\r\n          <option name=\"timeStamp\" value=\"120\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>279</line>\r\n          <option name=\"timeStamp\" value=\"121\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>280</line>\r\n          <option name=\"timeStamp\" value=\"122\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>284</line>\r\n          <option name=\"timeStamp\" value=\"123\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>286</line>\r\n          <option name=\"timeStamp\" value=\"124\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>289</line>\r\n          <option name=\"timeStamp\" value=\"125\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>294</line>\r\n          <option name=\"timeStamp\" value=\"126\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>299</line>\r\n          <option name=\"timeStamp\" value=\"127\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>303</line>\r\n          <option name=\"timeStamp\" value=\"128\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>447</line>\r\n          <option name=\"timeStamp\" value=\"129\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>\r\n          <line>442</line>\r\n          <option name=\"timeStamp\" value=\"130\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\r\n          <url>file://$PROJECT_DIR$/main.go</url>\r\n          <line>97</line>\r\n          <option name=\"timeStamp\" value=\"131\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"GoApplicationRunConfiguration\">\r\n        <watch expression=\"*(*&quot;gorm.io/gorm/clause.IN&quot;)(824634434064)\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,20 +4,23 @@
     <option name="autoReloadType" value="ALL" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0131f8b6-8380-4a5b-92de-cac124ac9e57" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/modules/user/usermodel/filter.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_9_3_2022_10_34_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_9_3_2022_10_34_AM__Changes_.xml" afterDir="false" />
+    <list default="true" id="0131f8b6-8380-4a5b-92de-cac124ac9e57" name="Changes" comment="fix delete post and delete comment">
+      <change afterPath="$PROJECT_DIR$/subscriber/delete_comment_count_after_delete_comment.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_11_2022_10_44_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_11_2022_10_44_AM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_12_2022_4_05_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_12_2022_4_05_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_12_2022_4_05_PM__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_12_2022_4_05_PM__Changes_1.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/common/pubsub_topic.go" beforeDir="false" afterPath="$PROJECT_DIR$/common/pubsub_topic.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/docs/docs.go" beforeDir="false" afterPath="$PROJECT_DIR$/docs/docs.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/docs/swagger.json" beforeDir="false" afterPath="$PROJECT_DIR$/docs/swagger.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/docs/swagger.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/docs/swagger.yaml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/modules/commentlike/commentlikemodel/comment_likes.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/commentlike/commentlikemodel/comment_likes.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/modules/post/postbiz/update_post.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/post/postbiz/update_post.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/modules/post/postmodel/post.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/post/postmodel/post.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/comment/commentbiz/delete_comment.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/comment/commentbiz/delete_comment.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/comment/commentmodel/comment.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/comment/commentmodel/comment.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/comment/transport/gincomment/delete_comment.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/comment/transport/gincomment/delete_comment.go" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/modules/post/poststorage/update.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/post/poststorage/update.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/modules/post/posttransport/ginpost/update_post.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/post/posttransport/ginpost/update_post.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/modules/user/userbiz/search_by_name.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/user/userbiz/search_by_name.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/modules/user/userstorage/find.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/user/userstorage/find.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/modules/user/usertransport/ginuser/search_by_name.go" beforeDir="false" afterPath="$PROJECT_DIR$/modules/user/usertransport/ginuser/search_by_name.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/subscriber/delete_comment_after_delete_post.go" beforeDir="false" afterPath="$PROJECT_DIR$/subscriber/delete_comment_commentlike_postlike_after_delete_post.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/subscriber/sub.go" beforeDir="false" afterPath="$PROJECT_DIR$/subscriber/sub.go" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -31,17 +34,14 @@
       </list>
     </option>
   </component>
-  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../../Program Files/Go" />
+  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../Program Files/Go" />
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="dev" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-  </component>
-  <component name="GitSEFilterConfiguration">
-    <file-type-list>
-      <filtered-out-file-type name="LOCAL_BRANCH" />
-      <filtered-out-file-type name="REMOTE_BRANCH" />
-      <filtered-out-file-type name="TAG" />
-      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
-    </file-type-list>
   </component>
   <component name="GoLibraries">
     <option name="indexEntireGoPath" value="false" />
@@ -66,15 +66,15 @@
     <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
     <property name="go.sdk.automatically.set" value="true" />
     <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/subscriber" />
   </component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\Admin\go\src\golang-2-final-exam\subscriber" />
       <recent name="C:\Users\PC\OneDrive\Máy tính\Go2insta\golang-2-final-exam\modules\user\usertransport\ginuser" />
       <recent name="C:\Users\PC\OneDrive\Máy tính\Go2insta\golang-2-final-exam\modules\user\userbiz" />
       <recent name="C:\Users\Admin\go\src\golang-2-final-exam\modules\post\posttransport\ginpost" />
       <recent name="C:\Users\Admin\go\src\golang-2-final-exam\modules\post\poststorage" />
-      <recent name="C:\Users\Admin\go\src\golang-2-final-exam\modules\post\postbiz" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\Admin\go\src\golang-2-final-exam\modules\comment\transport\ginreplycomment" />
@@ -111,6 +111,9 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Go Build.go build instago2" />
+        <item itemvalue="Go Build.go build instago2" />
+        <item itemvalue="Go Build.go build instago2" />
         <item itemvalue="Go Build.go build instago2" />
       </list>
     </recent_temporary>
@@ -130,6 +133,12 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Fix somethings" />
+    <MESSAGE value="fix posts search in swagger" />
+    <MESSAGE value="fix delete post and delete comment" />
+    <option name="LAST_COMMIT_MESSAGE" value="fix delete post and delete comment" />
+  </component>
   <component name="VgoProject">
     <integration-enabled>true</integration-enabled>
   </component>
@@ -192,36 +201,6 @@
           <option name="timeStamp" value="46" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="DlvLineBreakpoint">
-          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>
-          <line>24</line>
-          <option name="timeStamp" value="48" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
-          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>
-          <line>26</line>
-          <option name="timeStamp" value="50" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
-          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>
-          <line>28</line>
-          <option name="timeStamp" value="51" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
-          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>
-          <line>35</line>
-          <option name="timeStamp" value="52" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
-          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>
-          <line>38</line>
-          <option name="timeStamp" value="53" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
-          <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_post.go</url>
-          <line>42</line>
-          <option name="timeStamp" value="54" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
           <url>file://$PROJECT_DIR$/modules/upload/uploadtransport/ginupload/upload_file.go</url>
           <line>15</line>
           <option name="timeStamp" value="66" />
@@ -287,11 +266,6 @@
           <option name="timeStamp" value="79" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="DlvLineBreakpoint">
-          <url>file://$PROJECT_DIR$/main.go</url>
-          <line>95</line>
-          <option name="timeStamp" value="80" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
           <url>file://$PROJECT_DIR$/modules/post/posttransport/ginpost/list_following_post.go</url>
           <line>42</line>
           <option name="timeStamp" value="92" />
@@ -440,11 +414,6 @@
           <url>file://$PROJECT_DIR$/../../pkg/mod/gorm.io/gorm@v1.22.5/statement.go</url>
           <line>442</line>
           <option name="timeStamp" value="130" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
-          <url>file://$PROJECT_DIR$/main.go</url>
-          <line>97</line>
-          <option name="timeStamp" value="131" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
Index: modules/comment/commentmodel/comment.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package commentmodel\r\n\r\nimport (\r\n\t\"errors\"\r\n\t\"instago2/common\"\r\n\t\"strings\"\r\n)\r\n\r\nconst EntityName = \"Comment\"\r\n\r\ntype Comment struct {\r\n\tcommon.SQLModel  `json:\",inline\"`\r\n\tUserId           string             `json:\"user_id\" gorm:\"column:user_id;\"`\r\n\tPostId           string             `json:\"post_id\" gorm:\"column:post_id;\"`\r\n\tParentId         string             `json:\"parent_id\" gorm:\"column:parent_id;\"`\r\n\tContent          string             `json:\"content\" gorm:\"column:content;\"`\r\n\tUser             *common.SimpleUser `json:\"user\" gorm:\"preload:false;\"`\r\n\tCommentLikeCount int                `json:\"comment_like_count\" gorm:\"column:comment_like_count;\"`\r\n}\r\n\r\n// can call directly\r\nfunc (u *Comment) GetCommentId() int {\r\n\treturn u.Id\r\n}\r\n\r\nfunc (u *Comment) GetUserId() string {\r\n\treturn u.UserId\r\n}\r\n\r\nfunc (u *Comment) GetPostId() string {\r\n\treturn u.PostId\r\n}\r\n\r\nfunc (u *Comment) GetParentId() string {\r\n\treturn u.ParentId\r\n}\r\n\r\n// can call directly\r\n\r\nfunc (Comment) TableName() string {\r\n\treturn \"comments\"\r\n}\r\n\r\n//func (u *Comment) Mask(isAdmin bool) {\r\n//\tu.GenUID(common.DbTypeComment)\r\n//}\r\n\r\ntype CommentCreate struct {\r\n\tcommon.SQLModel `json:\",inline\"`\r\n\tUserId          int    `json:\"user_id\" gorm:\"column:user_id;\"`\r\n\tPostId          int    `json:\"post_id\" gorm:\"column:post_id\" form:\"post_id\"`\r\n\tParentId        int    `json:\"parent_id\" gorm:\"column:parent_id\" form:\"parent_id\"`\r\n\tContent         string `json:\"content\" gorm:\"column:content\" form:\"content\"`\r\n}\r\n\r\ntype CommentCreateRequest struct {\r\n\tUserId    int    `json:\"user_id\"`\r\n\tPostId    string `json:\"post_id\" form:\"post_id\"`\r\n\tCommentId string `json:\"comment_id\" form:\"comment_id\"`\r\n\tContent   string `json:\"content\" form:\"content\"`\r\n}\r\n\r\ntype CommentDelete struct {\r\n\tCommentId int `json:\"comment_id\" form:\"id\"`\r\n\tUserId    int `json:\"user_id\" form:\"user_id\"`\r\n}\r\n\r\nfunc (c *CommentDelete) GetCommmentDeleteId() int {\r\n\treturn c.CommentId\r\n}\r\n\r\nfunc (CommentCreate) TableName() string {\r\n\treturn Comment{}.TableName()\r\n}\r\n\r\nfunc (u *CommentCreate) Mask(isAdmin bool) {\r\n\tu.GenUID(common.DbTypeComment)\r\n}\r\n\r\nfunc (res *CommentCreate) Validate() error {\r\n\tres.Content = strings.TrimSpace(res.Content)\r\n\r\n\tif len(res.Content) == 0 {\r\n\t\treturn ErrCannotReplyAReply\r\n\t}\r\n\r\n\treturn nil\r\n}\r\n\r\nvar (\r\n\tErrCannotReplyAReply = common.NewCustomError(nil, \"can not reply a reply\", \"ErrCannotReplyAReply\")\r\n)\r\n\r\nfunc (data *Comment) Mask(isAdminOrOwner bool) {\r\n\tdata.GenUID(common.DbTypeComment)\r\n\r\n\tif u := data.User; u != nil {\r\n\t\tu.Mask(isAdminOrOwner)\r\n\t}\r\n}\r\n\r\nvar (\r\n\tErrCannotReplyComment = common.NewCustomError(\r\n\t\terrors.New(\"Can not reply comment\"),\r\n\t\t\"Can not reply comment\",\r\n\t\t\"ErrCannotReplyComment\",\r\n\t)\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/comment/commentmodel/comment.go b/modules/comment/commentmodel/comment.go
--- a/modules/comment/commentmodel/comment.go	
+++ b/modules/comment/commentmodel/comment.go	
@@ -62,11 +62,12 @@
 
 type CommentDelete struct {
 	CommentId int `json:"comment_id" form:"id"`
+	PostId    int `json:"post_id" form:"post_id"`
 	UserId    int `json:"user_id" form:"user_id"`
 }
 
-func (c *CommentDelete) GetCommmentDeleteId() int {
-	return c.CommentId
+func (c *CommentDelete) GetPostIdToDecreaseCommentCount() int {
+	return c.PostId
 }
 
 func (CommentCreate) TableName() string {
Index: modules/post/poststorage/update.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poststorage\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"gorm.io/gorm\"\r\n\t\"instago2/common\"\r\n\t\"instago2/modules/post/postmodel\"\r\n)\r\n\r\nfunc (s *sqlStore) UpdateData(\r\n\tctx context.Context,\r\n\tid int,\r\n\tuserId int,\r\n\tdata *postmodel.PostUpdate,\r\n) error {\r\n\tdb := s.db\r\n\r\n\tif err := db.Where(\"id = ?\", id).Where(\"user_id = ?\", userId).Updates(data).Error; err != nil {\r\n\t\treturn common.ErrDB(err)\r\n\t}\r\n\r\n\treturn nil\r\n}\r\n\r\nfunc (s *sqlStore) IncreaseLikeCount(ctx context.Context, id int) error {\r\n\tdb := s.db\r\n\r\n\tif err := db.Table(postmodel.PostUpdate{}.TableName()).Where(\"id = ?\", id).\r\n\t\tUpdate(\"post_liked_count\", gorm.Expr(\"post_liked_count + ?\", 1)).Error; err != nil {\r\n\t\treturn common.ErrDB(err)\r\n\t}\r\n\r\n\treturn nil\r\n}\r\n\r\nfunc (s *sqlStore) DecreasePostLikeCount(ctx context.Context, id int) error {\r\n\tdb := s.db\r\n\r\n\tif err := db.Table(postmodel.PostUpdate{}.TableName()).Where(\"id = ?\", id).\r\n\t\tUpdate(\"post_liked_count\", gorm.Expr(\"post_liked_count - ?\", 1)).Error; err != nil {\r\n\t\treturn common.ErrDB(err)\r\n\t}\r\n\treturn nil\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/post/poststorage/update.go b/modules/post/poststorage/update.go
--- a/modules/post/poststorage/update.go	
+++ b/modules/post/poststorage/update.go	
@@ -42,3 +42,14 @@
 	}
 	return nil
 }
+
+func (s *sqlStore) DecreaseCommentCount(ctx context.Context, id int) error {
+	db := s.db
+
+	if err := db.Table(postmodel.PostUpdate{}.TableName()).
+		Where("id = ?", id).Update("comment_count", gorm.Expr("comment_count - ?", 1)).Error; err != nil {
+		return common.ErrDB(err)
+	}
+
+	return nil
+}
Index: common/pubsub_topic.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package common\r\n\r\nimport \"instago2/pubsub\"\r\n\r\nconst (\r\n\tTopicDeletePost pubsub.Topic = \"TopicDeletePost\"\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/pubsub_topic.go b/common/pubsub_topic.go
--- a/common/pubsub_topic.go	
+++ b/common/pubsub_topic.go	
@@ -3,5 +3,6 @@
 import "instago2/pubsub"
 
 const (
-	TopicDeletePost pubsub.Topic = "TopicDeletePost"
+	TopicDeletePost    pubsub.Topic = "TopicDeletePost"
+	TopicDeleteComment pubsub.Topic = "TopicDeleteComment"
 )
Index: docs/swagger.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n    \"swagger\": \"2.0\",\r\n    \"info\": {\r\n        \"description\": \"This is a images social network.\",\r\n        \"title\": \"Swagger Insta API\",\r\n        \"termsOfService\": \"http://swagger.io/terms/\",\r\n        \"contact\": {\r\n            \"name\": \"API Support\",\r\n            \"url\": \"http://www.swagger.io/support\",\r\n            \"email\": \"support@swagger.io\"\r\n        },\r\n        \"license\": {\r\n            \"name\": \"Apache 2.0\",\r\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\r\n        },\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"host\": \"localhost:8080\",\r\n    \"basePath\": \"/v1\",\r\n    \"paths\": {\r\n        \"/comments/{id}\": {\r\n            \"delete\": {\r\n                \"description\": \"Delete a comment by comment ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"comments\"\r\n                ],\r\n                \"summary\": \"Delete a comment\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the comment that user want to delete (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/comments/{id}/like\": {\r\n            \"post\": {\r\n                \"description\": \"Create by comment ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"comments\"\r\n                ],\r\n                \"summary\": \"Create a commentlike\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the comment that user want to like (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/comments/{id}/unlike\": {\r\n            \"delete\": {\r\n                \"description\": \"Delete by comment ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"comments\"\r\n                ],\r\n                \"summary\": \"Delete a commentlike\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the comment that user want to unlike (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/login\": {\r\n            \"post\": {\r\n                \"description\": \"User login into account\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"Login\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"description\": \"account's information of user that want to log in\",\r\n                        \"name\": \"user\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/usermodel.UserLogin\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/tokenprovider.Token\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts\": {\r\n            \"post\": {\r\n                \"description\": \"User creates new post\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"CreatePost\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"description\": \"information of the post that user want to create\",\r\n                        \"name\": \"post\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/postmodel.PostCreate\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/comments/replies\": {\r\n            \"post\": {\r\n                \"description\": \"User creates a reply\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"CreateReply\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"description\": \"user reply comment\",\r\n                        \"name\": \"data\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/commentmodel.CommentCreateRequest\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/explore\": {\r\n            \"get\": {\r\n                \"description\": \"Get all post\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Get all post\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/explore/following\": {\r\n            \"get\": {\r\n                \"description\": \"Get all posts of following\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Get all posts of following\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/explore/{id}\": {\r\n            \"get\": {\r\n                \"description\": \"Get a post by id\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Get a post\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of post that user want to see (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/searches\": {\r\n            \"post\": {\r\n                \"description\": \"Get posts by searching\",\r\n                \"consumes\": [\r\n                    \"multipart/form-data\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Search posts\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"name\": \"caption\",\r\n                        \"in\": \"formData\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"name\": \"from\",\r\n                        \"in\": \"formData\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"name\": \"search_name\",\r\n                        \"in\": \"formData\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"name\": \"to\",\r\n                        \"in\": \"formData\"\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/{id}\": {\r\n            \"delete\": {\r\n                \"description\": \"Delete by post ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Delete a post\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the post that user want to delete (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"patch\": {\r\n                \"description\": \"User updates post\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"UpdatePost\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"integer\",\r\n                        \"description\": \"id of the post that user want to delete (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"description\": \"information of the post that user want to edit\",\r\n                        \"name\": \"post\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/postmodel.PostUpdate\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/{id}/comment\": {\r\n            \"post\": {\r\n                \"description\": \"Create by post ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Create a comment\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the post that user want to comment (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"description\": \"content of comment\",\r\n                        \"name\": \"content\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/commentmodel.CommentCreate\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/{id}/comments\": {\r\n            \"get\": {\r\n                \"description\": \"Get all comment in a post\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Get all comment\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the post that user want to see all comments (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/{id}/like\": {\r\n            \"post\": {\r\n                \"description\": \"Create by post ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Create a postlike\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the post that user want to like (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/{id}/unlike\": {\r\n            \"delete\": {\r\n                \"description\": \"Delete by post ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Delete a postlike\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the post that user want to unlike (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/register\": {\r\n            \"post\": {\r\n                \"description\": \"User create new account\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"Register\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"description\": \"information of user that need to create an account\",\r\n                        \"name\": \"user\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/usermodel.UserCreate\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users\": {\r\n            \"patch\": {\r\n                \"description\": \"Users update their own account information\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"UpdateProfile\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"description\": \"information that user want to update\",\r\n                        \"name\": \"user\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/usermodel.UserUpdate\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/follower\": {\r\n            \"get\": {\r\n                \"description\": \"List follower of current user\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"ListFollower\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"username, lastname or firstname of other user that current user want to search in list follower\",\r\n                        \"name\": \"name\",\r\n                        \"in\": \"query\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"limit records return in one page\",\r\n                        \"name\": \"limit\",\r\n                        \"in\": \"query\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"used for paging purpose\",\r\n                        \"name\": \"cursor\",\r\n                        \"in\": \"query\"\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"type\": \"array\",\r\n                            \"items\": {\r\n                                \"$ref\": \"#/definitions/common.SimpleUser\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/following\": {\r\n            \"get\": {\r\n                \"description\": \"List following of current user\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"ListFollowing\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"username, lastname or firstname of other user that current user want to search in list following\",\r\n                        \"name\": \"name\",\r\n                        \"in\": \"query\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"limit records return in one page\",\r\n                        \"name\": \"limit\",\r\n                        \"in\": \"query\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"used for paging purpose\",\r\n                        \"name\": \"cursor\",\r\n                        \"in\": \"query\"\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"type\": \"array\",\r\n                            \"items\": {\r\n                                \"$ref\": \"#/definitions/common.SimpleUser\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/profile\": {\r\n            \"get\": {\r\n                \"description\": \"Get profile of current user\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"GetProfile\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/usermodel.User\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/profile/{id}\": {\r\n            \"get\": {\r\n                \"description\": \"Get profile of another user by id\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"GetOtherProfile\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"user id of other user that current user want to see profile (encoded to uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.SimpleUser\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/search/{searchKey}\": {\r\n            \"get\": {\r\n                \"description\": \"Search other user by username, first name or last name\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"SearchUserByName\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"username, lastname or firstname of other user that current user want to search\",\r\n                        \"name\": \"searchKey\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"type\": \"array\",\r\n                            \"items\": {\r\n                                \"$ref\": \"#/definitions/common.SimpleUser\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/{id}/follow\": {\r\n            \"post\": {\r\n                \"description\": \"User follow another user\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"UserFollowUser\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"user id of other user that current user want to follow (encoded to uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/{id}/unfollow\": {\r\n            \"delete\": {\r\n                \"description\": \"User unfollow another user\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"UserUnfollowUser\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"user id of other user that current user want to unfollow (encoded to uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"definitions\": {\r\n        \"commentmodel.CommentCreate\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"content\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"parent_id\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"post_id\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_id\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n        \"commentmodel.CommentCreateRequest\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"comment_id\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"content\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"post_id\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_id\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n        \"common.AppError\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"error_key\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"log\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"message\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"status_code\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n        \"common.Image\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cloud_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"extension\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"height\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"id\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"url\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"width\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n        \"common.SimpleUser\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"avatar\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"first_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"follower_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"following_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"last_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"post_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"common.UID\": {\r\n            \"type\": \"object\"\r\n        },\r\n        \"common.successRes\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"data\": {},\r\n                \"filter\": {},\r\n                \"paging\": {}\r\n            }\r\n        },\r\n        \"postmodel.PostCreate\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"caption\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"img\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_id\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n        \"postmodel.PostUpdate\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"caption\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"img\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                }\r\n            }\r\n        },\r\n        \"tokenprovider.Token\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"created\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"expiry\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"token\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"usermodel.User\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"avatar\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"date_of_birth\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"email\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"first_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"follower_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"following_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"last_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"phone\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"post_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"role\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_name\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"usermodel.UserCreate\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"avatar\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"date_of_birth\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"email\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"first_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"last_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"password\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"phone\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"role\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_name\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"usermodel.UserLogin\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"email\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"password\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"usermodel.UserUpdate\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"avatar\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"date_of_birth\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"email\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"first_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"last_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"password\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"phone\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_name\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"securityDefinitions\": {\r\n        \"BasicAuth\": {\r\n            \"type\": \"basic\"\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docs/swagger.json b/docs/swagger.json
--- a/docs/swagger.json	
+++ b/docs/swagger.json	
@@ -18,16 +18,16 @@
     "host": "localhost:8080",
     "basePath": "/v1",
     "paths": {
-        "/comments/{id}": {
-            "delete": {
-                "description": "Delete a comment by comment ID",
+        "/comments/{id}/like": {
+            "post": {
+                "description": "Create by comment ID",
                 "consumes": [
                     "application/json"
                 ],
                 "tags": [
                     "comments"
                 ],
-                "summary": "Delete a comment",
+                "summary": "Create a commentlike",
                 "parameters": [
                     {
                         "type": "string",
@@ -39,7 +39,7 @@
                     },
                     {
                         "type": "string",
-                        "description": "id of the comment that user want to delete (encoded in uuid)",
+                        "description": "id of the comment that user want to like (encoded in uuid)",
                         "name": "id",
                         "in": "path",
                         "required": true
@@ -73,16 +73,16 @@
                 }
             }
         },
-        "/comments/{id}/like": {
-            "post": {
-                "description": "Create by comment ID",
+        "/comments/{id}/unlike": {
+            "delete": {
+                "description": "Delete by comment ID",
                 "consumes": [
                     "application/json"
                 ],
                 "tags": [
                     "comments"
                 ],
-                "summary": "Create a commentlike",
+                "summary": "Delete a commentlike",
                 "parameters": [
                     {
                         "type": "string",
@@ -94,7 +94,7 @@
                     },
                     {
                         "type": "string",
-                        "description": "id of the comment that user want to like (encoded in uuid)",
+                        "description": "id of the comment that user want to unlike (encoded in uuid)",
                         "name": "id",
                         "in": "path",
                         "required": true
@@ -128,16 +128,16 @@
                 }
             }
         },
-        "/comments/{id}/unlike": {
+        "/comments/{id}/{post_id}": {
             "delete": {
-                "description": "Delete by comment ID",
+                "description": "Delete a comment by comment ID",
                 "consumes": [
                     "application/json"
                 ],
                 "tags": [
                     "comments"
                 ],
-                "summary": "Delete a commentlike",
+                "summary": "Delete a comment",
                 "parameters": [
                     {
                         "type": "string",
@@ -149,10 +149,17 @@
                     },
                     {
                         "type": "string",
-                        "description": "id of the comment that user want to unlike (encoded in uuid)",
+                        "description": "id of the comment that user want to delete (encoded in uuid)",
                         "name": "id",
                         "in": "path",
                         "required": true
+                    },
+                    {
+                        "type": "string",
+                        "description": "post_id of the comment that user want to delete (encoded in uuid)",
+                        "name": "post_id",
+                        "in": "path",
+                        "required": true
                     }
                 ],
                 "responses": {
Index: docs/docs.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT\r\n// This file was generated by swaggo/swag\r\npackage docs\r\n\r\nimport \"github.com/swaggo/swag\"\r\n\r\nconst docTemplate = `{\r\n    \"schemes\": {{ marshal .Schemes }},\r\n    \"swagger\": \"2.0\",\r\n    \"info\": {\r\n        \"description\": \"{{escape .Description}}\",\r\n        \"title\": \"{{.Title}}\",\r\n        \"termsOfService\": \"http://swagger.io/terms/\",\r\n        \"contact\": {\r\n            \"name\": \"API Support\",\r\n            \"url\": \"http://www.swagger.io/support\",\r\n            \"email\": \"support@swagger.io\"\r\n        },\r\n        \"license\": {\r\n            \"name\": \"Apache 2.0\",\r\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\r\n        },\r\n        \"version\": \"{{.Version}}\"\r\n    },\r\n    \"host\": \"{{.Host}}\",\r\n    \"basePath\": \"{{.BasePath}}\",\r\n    \"paths\": {\r\n        \"/comments/{id}\": {\r\n            \"delete\": {\r\n                \"description\": \"Delete a comment by comment ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"comments\"\r\n                ],\r\n                \"summary\": \"Delete a comment\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the comment that user want to delete (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/comments/{id}/like\": {\r\n            \"post\": {\r\n                \"description\": \"Create by comment ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"comments\"\r\n                ],\r\n                \"summary\": \"Create a commentlike\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the comment that user want to like (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/comments/{id}/unlike\": {\r\n            \"delete\": {\r\n                \"description\": \"Delete by comment ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"comments\"\r\n                ],\r\n                \"summary\": \"Delete a commentlike\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the comment that user want to unlike (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/login\": {\r\n            \"post\": {\r\n                \"description\": \"User login into account\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"Login\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"description\": \"account's information of user that want to log in\",\r\n                        \"name\": \"user\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/usermodel.UserLogin\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/tokenprovider.Token\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts\": {\r\n            \"post\": {\r\n                \"description\": \"User creates new post\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"CreatePost\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"description\": \"information of the post that user want to create\",\r\n                        \"name\": \"post\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/postmodel.PostCreate\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/comments/replies\": {\r\n            \"post\": {\r\n                \"description\": \"User creates a reply\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"CreateReply\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"description\": \"user reply comment\",\r\n                        \"name\": \"data\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/commentmodel.CommentCreateRequest\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/explore\": {\r\n            \"get\": {\r\n                \"description\": \"Get all post\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Get all post\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/explore/following\": {\r\n            \"get\": {\r\n                \"description\": \"Get all posts of following\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Get all posts of following\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/explore/{id}\": {\r\n            \"get\": {\r\n                \"description\": \"Get a post by id\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Get a post\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of post that user want to see (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/searches\": {\r\n            \"post\": {\r\n                \"description\": \"Get posts by searching\",\r\n                \"consumes\": [\r\n                    \"multipart/form-data\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Search posts\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"name\": \"caption\",\r\n                        \"in\": \"formData\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"name\": \"from\",\r\n                        \"in\": \"formData\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"name\": \"search_name\",\r\n                        \"in\": \"formData\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"name\": \"to\",\r\n                        \"in\": \"formData\"\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/{id}\": {\r\n            \"delete\": {\r\n                \"description\": \"Delete by post ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Delete a post\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the post that user want to delete (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"patch\": {\r\n                \"description\": \"User updates post\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"UpdatePost\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"integer\",\r\n                        \"description\": \"id of the post that user want to delete (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"description\": \"information of the post that user want to edit\",\r\n                        \"name\": \"post\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/postmodel.PostUpdate\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/{id}/comment\": {\r\n            \"post\": {\r\n                \"description\": \"Create by post ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Create a comment\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the post that user want to comment (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"description\": \"content of comment\",\r\n                        \"name\": \"content\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/commentmodel.CommentCreate\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/{id}/comments\": {\r\n            \"get\": {\r\n                \"description\": \"Get all comment in a post\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Get all comment\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the post that user want to see all comments (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/{id}/like\": {\r\n            \"post\": {\r\n                \"description\": \"Create by post ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Create a postlike\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the post that user want to like (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/posts/{id}/unlike\": {\r\n            \"delete\": {\r\n                \"description\": \"Delete by post ID\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"posts\"\r\n                ],\r\n                \"summary\": \"Delete a postlike\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"id of the post that user want to unlike (encoded in uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/register\": {\r\n            \"post\": {\r\n                \"description\": \"User create new account\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"Register\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"description\": \"information of user that need to create an account\",\r\n                        \"name\": \"user\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/usermodel.UserCreate\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users\": {\r\n            \"patch\": {\r\n                \"description\": \"Users update their own account information\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"UpdateProfile\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"description\": \"information that user want to update\",\r\n                        \"name\": \"user\",\r\n                        \"in\": \"body\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/usermodel.UserUpdate\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/follower\": {\r\n            \"get\": {\r\n                \"description\": \"List follower of current user\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"ListFollower\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"username, lastname or firstname of other user that current user want to search in list follower\",\r\n                        \"name\": \"name\",\r\n                        \"in\": \"query\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"limit records return in one page\",\r\n                        \"name\": \"limit\",\r\n                        \"in\": \"query\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"used for paging purpose\",\r\n                        \"name\": \"cursor\",\r\n                        \"in\": \"query\"\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"type\": \"array\",\r\n                            \"items\": {\r\n                                \"$ref\": \"#/definitions/common.SimpleUser\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/following\": {\r\n            \"get\": {\r\n                \"description\": \"List following of current user\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"ListFollowing\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"username, lastname or firstname of other user that current user want to search in list following\",\r\n                        \"name\": \"name\",\r\n                        \"in\": \"query\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"limit records return in one page\",\r\n                        \"name\": \"limit\",\r\n                        \"in\": \"query\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"used for paging purpose\",\r\n                        \"name\": \"cursor\",\r\n                        \"in\": \"query\"\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"type\": \"array\",\r\n                            \"items\": {\r\n                                \"$ref\": \"#/definitions/common.SimpleUser\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/profile\": {\r\n            \"get\": {\r\n                \"description\": \"Get profile of current user\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"GetProfile\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/usermodel.User\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/profile/{id}\": {\r\n            \"get\": {\r\n                \"description\": \"Get profile of another user by id\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"GetOtherProfile\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"user id of other user that current user want to see profile (encoded to uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.SimpleUser\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/search/{searchKey}\": {\r\n            \"get\": {\r\n                \"description\": \"Search other user by username, first name or last name\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"produces\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"SearchUserByName\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"username, lastname or firstname of other user that current user want to search\",\r\n                        \"name\": \"searchKey\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"type\": \"array\",\r\n                            \"items\": {\r\n                                \"$ref\": \"#/definitions/common.SimpleUser\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/{id}/follow\": {\r\n            \"post\": {\r\n                \"description\": \"User follow another user\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"UserFollowUser\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"user id of other user that current user want to follow (encoded to uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/users/{id}/unfollow\": {\r\n            \"delete\": {\r\n                \"description\": \"User unfollow another user\",\r\n                \"consumes\": [\r\n                    \"application/json\"\r\n                ],\r\n                \"tags\": [\r\n                    \"users\"\r\n                ],\r\n                \"summary\": \"UserUnfollowUser\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"default\": \"Bearer \\u003cAdd access token here\\u003e\",\r\n                        \"description\": \"Insert your access token\",\r\n                        \"name\": \"Authorization\",\r\n                        \"in\": \"header\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"description\": \"user id of other user that current user want to unfollow (encoded to uuid)\",\r\n                        \"name\": \"id\",\r\n                        \"in\": \"path\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"OK\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.successRes\"\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"404\": {\r\n                        \"description\": \"Not Found\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    },\r\n                    \"500\": {\r\n                        \"description\": \"Internal Server Error\",\r\n                        \"schema\": {\r\n                            \"$ref\": \"#/definitions/common.AppError\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"definitions\": {\r\n        \"commentmodel.CommentCreate\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"content\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"parent_id\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"post_id\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_id\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n        \"commentmodel.CommentCreateRequest\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"comment_id\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"content\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"post_id\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_id\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n        \"common.AppError\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"error_key\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"log\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"message\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"status_code\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n        \"common.Image\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"cloud_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"extension\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"height\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"id\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"url\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"width\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n        \"common.SimpleUser\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"avatar\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"first_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"follower_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"following_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"last_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"post_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"common.UID\": {\r\n            \"type\": \"object\"\r\n        },\r\n        \"common.successRes\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"data\": {},\r\n                \"filter\": {},\r\n                \"paging\": {}\r\n            }\r\n        },\r\n        \"postmodel.PostCreate\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"caption\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"img\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_id\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n        \"postmodel.PostUpdate\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"caption\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"img\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                }\r\n            }\r\n        },\r\n        \"tokenprovider.Token\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"created\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"expiry\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"token\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"usermodel.User\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"avatar\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"date_of_birth\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"email\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"first_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"follower_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"following_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"last_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"phone\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"post_count\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"role\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_name\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"usermodel.UserCreate\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"avatar\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"date_of_birth\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"email\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"first_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"last_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"password\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"phone\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"role\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_name\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"usermodel.UserLogin\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"email\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"password\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"usermodel.UserUpdate\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"avatar\": {\r\n                    \"$ref\": \"#/definitions/common.Image\"\r\n                },\r\n                \"created_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"date_of_birth\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"email\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"first_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"id\": {\r\n                    \"$ref\": \"#/definitions/common.UID\"\r\n                },\r\n                \"last_name\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"password\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"phone\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"status\": {\r\n                    \"type\": \"integer\"\r\n                },\r\n                \"updated_at\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"user_name\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"securityDefinitions\": {\r\n        \"BasicAuth\": {\r\n            \"type\": \"basic\"\r\n        }\r\n    }\r\n}`\r\n\r\n// SwaggerInfo holds exported Swagger Info so clients can modify it\r\nvar SwaggerInfo = &swag.Spec{\r\n\tVersion:          \"1.0\",\r\n\tHost:             \"localhost:8080\",\r\n\tBasePath:         \"/v1\",\r\n\tSchemes:          []string{},\r\n\tTitle:            \"Swagger Insta API\",\r\n\tDescription:      \"This is a images social network.\",\r\n\tInfoInstanceName: \"swagger\",\r\n\tSwaggerTemplate:  docTemplate,\r\n}\r\n\r\nfunc init() {\r\n\tswag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docs/docs.go b/docs/docs.go
--- a/docs/docs.go	
+++ b/docs/docs.go	
@@ -25,16 +25,16 @@
     "host": "{{.Host}}",
     "basePath": "{{.BasePath}}",
     "paths": {
-        "/comments/{id}": {
-            "delete": {
-                "description": "Delete a comment by comment ID",
+        "/comments/{id}/like": {
+            "post": {
+                "description": "Create by comment ID",
                 "consumes": [
                     "application/json"
                 ],
                 "tags": [
                     "comments"
                 ],
-                "summary": "Delete a comment",
+                "summary": "Create a commentlike",
                 "parameters": [
                     {
                         "type": "string",
@@ -46,7 +46,7 @@
                     },
                     {
                         "type": "string",
-                        "description": "id of the comment that user want to delete (encoded in uuid)",
+                        "description": "id of the comment that user want to like (encoded in uuid)",
                         "name": "id",
                         "in": "path",
                         "required": true
@@ -80,16 +80,16 @@
                 }
             }
         },
-        "/comments/{id}/like": {
-            "post": {
-                "description": "Create by comment ID",
+        "/comments/{id}/unlike": {
+            "delete": {
+                "description": "Delete by comment ID",
                 "consumes": [
                     "application/json"
                 ],
                 "tags": [
                     "comments"
                 ],
-                "summary": "Create a commentlike",
+                "summary": "Delete a commentlike",
                 "parameters": [
                     {
                         "type": "string",
@@ -101,7 +101,7 @@
                     },
                     {
                         "type": "string",
-                        "description": "id of the comment that user want to like (encoded in uuid)",
+                        "description": "id of the comment that user want to unlike (encoded in uuid)",
                         "name": "id",
                         "in": "path",
                         "required": true
@@ -135,16 +135,16 @@
                 }
             }
         },
-        "/comments/{id}/unlike": {
+        "/comments/{id}/{post_id}": {
             "delete": {
-                "description": "Delete by comment ID",
+                "description": "Delete a comment by comment ID",
                 "consumes": [
                     "application/json"
                 ],
                 "tags": [
                     "comments"
                 ],
-                "summary": "Delete a commentlike",
+                "summary": "Delete a comment",
                 "parameters": [
                     {
                         "type": "string",
@@ -156,10 +156,17 @@
                     },
                     {
                         "type": "string",
-                        "description": "id of the comment that user want to unlike (encoded in uuid)",
+                        "description": "id of the comment that user want to delete (encoded in uuid)",
                         "name": "id",
                         "in": "path",
                         "required": true
+                    },
+                    {
+                        "type": "string",
+                        "description": "post_id of the comment that user want to delete (encoded in uuid)",
+                        "name": "post_id",
+                        "in": "path",
+                        "required": true
                     }
                 ],
                 "responses": {
Index: main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main\r\n\r\nimport (\r\n\tginSwagger \"github.com/swaggo/gin-swagger\"\r\n\t\"github.com/swaggo/gin-swagger/swaggerFiles\"\r\n\t\"instago2/component\"\r\n\t\"instago2/component/uploadprovider\"\r\n\t_ \"instago2/docs\"\r\n\t\"instago2/middleware\"\r\n\t\"instago2/modules/comment/transport/gincomment\"\r\n\t\"instago2/modules/comment/transport/ginreplycomment\"\r\n\t\"instago2/modules/commentlike/commentliketransport\"\r\n\t\"instago2/modules/post/posttransport/ginpost\"\r\n\t\"instago2/modules/postlike/postliketransport\"\r\n\t\"instago2/modules/postsearch/postsearchtransport/ginpostsearch\"\r\n\t\"instago2/modules/upload/uploadtransport/ginupload\"\r\n\t\"instago2/modules/user/usertransport/ginuser\"\r\n\t\"instago2/modules/userfollow/userfollowtransport/ginuserfollow\"\r\n\t\"instago2/pubsub/pblocal\"\r\n\t\"instago2/subscriber\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"os\"\r\n\r\n\t\"github.com/gin-gonic/gin\"\r\n\t\"github.com/joho/godotenv\"\r\n\t\"gorm.io/driver/mysql\"\r\n\t\"gorm.io/gorm\"\r\n)\r\n\r\n// @title           Swagger Insta API\r\n// @version         1.0\r\n// @description     This is a images social network.\r\n// @termsOfService  http://swagger.io/terms/\r\n\r\n// @contact.name   API Support\r\n// @contact.url    http://www.swagger.io/support\r\n// @contact.email  support@swagger.io\r\n\r\n// @license.name  Apache 2.0\r\n// @license.url   http://www.apache.org/licenses/LICENSE-2.0.html\r\n\r\n// @host      localhost:8080\r\n// @BasePath  /v1\r\n\r\n// @securityDefinitions.basic  BasicAuth\r\n\r\nfunc goDotEnvVariable(key string) string {\r\n\r\n\terr := godotenv.Load(\"md.env\")\r\n\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"Error loading .env file\")\r\n\t}\r\n\r\n\treturn os.Getenv(key)\r\n}\r\n\r\nfunc main() {\r\n\tdsn := goDotEnvVariable(\"DBCONNECTIONSTR\")\r\n\r\n\ts3BucketName := goDotEnvVariable(\"S3BUCKETNAME\")\r\n\ts3Region := goDotEnvVariable(\"S3REGION\")\r\n\ts3APIKey := goDotEnvVariable(\"S3APIKEY\")\r\n\ts3SecretKey := goDotEnvVariable(\"S3SECRETKEY\")\r\n\ts3Domain := goDotEnvVariable(\"S3DOMAIN\")\r\n\tsecretKey := goDotEnvVariable(\"LOGINSECRETKEY\")\r\n\r\n\ts3Provider := uploadprovider.NewS3Provider(s3BucketName, s3Region, s3APIKey, s3SecretKey, s3Domain)\r\n\r\n\tdb, err := gorm.Open(mysql.Open(dsn), &gorm.Config{})\r\n\r\n\tif err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n\r\n\tdb = db.Debug()\r\n\tif err := runService(db, s3Provider, secretKey); err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n\r\n}\r\n\r\nfunc runService(db *gorm.DB, upProvider uploadprovider.UploadProvider, secretKey string) error {\r\n\r\n\tappCtx := component.NewAppContext(db, upProvider, secretKey, pblocal.NewPubSub())\r\n\r\n\tif err := subscriber.NewEngine(appCtx).Start(); err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n\tr := gin.Default()\r\n\tr.Use(middleware.Recover(appCtx))\r\n\tr.GET(\"/ping\", func(c *gin.Context) {\r\n\t\tc.JSON(http.StatusOK, gin.H{\r\n\t\t\t\"message\": \"true\",\r\n\t\t})\r\n\t})\r\n\r\n\tr.GET(\"/swagger/*any\", ginSwagger.WrapHandler(swaggerFiles.Handler))\r\n\r\n\tv1 := r.Group(\"/v1\")\r\n\tv1.POST(\"/upload\", middleware.RequiredAuth(appCtx), ginupload.Upload(appCtx))\r\n\tv1.POST(\"/register\", ginuser.Register(appCtx))\r\n\tv1.POST(\"/login\", ginuser.Login(appCtx))\r\n\r\n\tusers := v1.Group(\"/users\", middleware.RequiredAuth(appCtx))\r\n\t{\r\n\t\t// get profile of current user\r\n\t\tusers.GET(\"/profile\", ginuser.GetProfile(appCtx))\r\n\t\t// update profile of current user\r\n\t\tusers.PATCH(\"\", ginuser.UpdateProfile(appCtx))\r\n\r\n\t\t// get profile of other user\r\n\t\tusers.GET(\"/profile/:id\", ginuser.GetOtherProfile(appCtx))\r\n\t\t// follow\r\n\t\tusers.POST(\"/:id/follow\", ginuserfollow.UserFollowUser(appCtx))\r\n\t\t// unfollow\r\n\t\tusers.DELETE(\"/:id/unfollow\", ginuserfollow.UserUnfollowUser(appCtx))\r\n\t\t// list followers\r\n\t\tusers.GET(\"/follower\", ginuserfollow.ListFollower(appCtx))\r\n\t\t// list following\r\n\t\tusers.GET(\"/following\", ginuserfollow.ListFollowing(appCtx))\r\n\t\t// search by name\r\n\t\tusers.GET(\"/search/:searchKey\", ginuser.SearchUserByName(appCtx))\r\n\t}\r\n\r\n\tposts := v1.Group(\"/posts\", middleware.RequiredAuth(appCtx))\r\n\t{\r\n\t\t//Create post\r\n\t\tposts.POST(\"\", ginpost.CreatePost(appCtx))\r\n\t\t//Update post\r\n\t\tposts.PATCH(\"/:id\", ginpost.UpdatePost(appCtx))\r\n\t\t// create reply a comment\r\n\t\tposts.POST(\"/comments/replies\", ginreplycomment.CreateReply(appCtx))\r\n\r\n\t\t// List comments of one post\r\n\t\tposts.GET(\"/:id/comments\", ginreplycomment.ListComment(appCtx))\r\n\t\t// list all posts\r\n\t\tposts.GET(\"/explore\", ginpost.ListPost(appCtx))\r\n\t\t// Get post\r\n\t\tposts.GET(\"/explore/:id\", ginpost.GetPost(appCtx))\r\n\t\t// Get posts of all following list\r\n\t\tposts.GET(\"/explore/following\", ginpost.ListFollowingPost(appCtx))\r\n\t\t// Like post\r\n\t\tposts.POST(\"/:id/like\", postliketransport.CreatePostLikes(appCtx))\r\n\t\t// Unlike post\r\n\t\tposts.DELETE(\"/:id/unlike\", postliketransport.UnlikePost(appCtx))\r\n\t\t// Comment post\r\n\t\tposts.POST(\"/:id/comment\", gincomment.CreateComment(appCtx))\r\n\t\t// Delete post\r\n\t\tposts.DELETE(\"/:id\", ginpost.DeletePost(appCtx))\r\n\t\t// Search posts by caption, search name and time\r\n\t\tposts.POST(\"/searches\", ginpostsearch.ListPostSearch(appCtx))\r\n\t}\r\n\r\n\tcomments := v1.Group(\"comments\", middleware.RequiredAuth(appCtx))\r\n\t{\r\n\t\t// Like comment\r\n\t\tcomments.POST(\"/:id/like\", commentliketransport.CreateCommentLikes(appCtx))\r\n\t\t//Unlike comment\r\n\t\tcomments.DELETE(\"/:id/unlike\", commentliketransport.UnlikeComment(appCtx))\r\n\t\t//Delete comments\r\n\t\tcomments.DELETE(\"/:id\", gincomment.DeleteComment(appCtx))\r\n\r\n\t}\r\n\r\n\treturn r.Run()\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.go b/main.go
--- a/main.go	
+++ b/main.go	
@@ -3,6 +3,7 @@
 import (
 	ginSwagger "github.com/swaggo/gin-swagger"
 	"github.com/swaggo/gin-swagger/swaggerFiles"
+	"instago2/common"
 	"instago2/component"
 	"instago2/component/uploadprovider"
 	_ "instago2/docs"
@@ -160,9 +161,23 @@
 		//Unlike comment
 		comments.DELETE("/:id/unlike", commentliketransport.UnlikeComment(appCtx))
 		//Delete comments
-		comments.DELETE("/:id", gincomment.DeleteComment(appCtx))
+		comments.DELETE("/:id/:post_id", gincomment.DeleteComment(appCtx))
+
+	}
 
-	}
+	v1.GET("/encode-uid", func(c *gin.Context) {
+		type reqData struct {
+			DbType int `form:"type"`
+			RealId int `form:"id"`
+		}
+
+		var d reqData
+		c.ShouldBind(&d)
+
+		c.JSON(http.StatusOK, gin.H{
+			"id": common.NewUID(uint32(d.RealId), d.DbType, 1),
+		})
+	})
 
 	return r.Run()
 }
Index: subscriber/delete_comment_count_after_delete_comment.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/subscriber/delete_comment_count_after_delete_comment.go b/subscriber/delete_comment_count_after_delete_comment.go
new file mode 100644
--- /dev/null	
+++ b/subscriber/delete_comment_count_after_delete_comment.go	
@@ -0,0 +1,23 @@
+package subscriber
+
+import (
+	"context"
+	"instago2/component"
+	"instago2/modules/post/poststorage"
+	"instago2/pubsub"
+)
+
+type HasPostIdToDecreaseCommentCount interface {
+	GetPostIdToDecreaseCommentCount() int
+}
+
+func DeleteCommentCountAfterDeleteComment(appCtx component.AppContext) consumerJob {
+	return consumerJob{
+		Title: "Delete comment count after delete comment",
+		Hld: func(ctx context.Context, message *pubsub.Message) error {
+			store := poststorage.NewSQLStore(appCtx.GetMainDBConnection())
+			decreaseData := message.Data().(HasPostIdToDecreaseCommentCount)
+			return store.DecreaseCommentCount(ctx, decreaseData.GetPostIdToDecreaseCommentCount())
+		},
+	}
+}
Index: docs/swagger.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>basePath: /v1\r\ndefinitions:\r\n  commentmodel.CommentCreate:\r\n    properties:\r\n      content:\r\n        type: string\r\n      created_at:\r\n        type: string\r\n      id:\r\n        $ref: '#/definitions/common.UID'\r\n      parent_id:\r\n        type: integer\r\n      post_id:\r\n        type: integer\r\n      status:\r\n        type: integer\r\n      updated_at:\r\n        type: string\r\n      user_id:\r\n        type: integer\r\n    type: object\r\n  commentmodel.CommentCreateRequest:\r\n    properties:\r\n      comment_id:\r\n        type: string\r\n      content:\r\n        type: string\r\n      post_id:\r\n        type: string\r\n      user_id:\r\n        type: integer\r\n    type: object\r\n  common.AppError:\r\n    properties:\r\n      error_key:\r\n        type: string\r\n      log:\r\n        type: string\r\n      message:\r\n        type: string\r\n      status_code:\r\n        type: integer\r\n    type: object\r\n  common.Image:\r\n    properties:\r\n      cloud_name:\r\n        type: string\r\n      extension:\r\n        type: string\r\n      height:\r\n        type: integer\r\n      id:\r\n        type: integer\r\n      url:\r\n        type: string\r\n      width:\r\n        type: integer\r\n    type: object\r\n  common.SimpleUser:\r\n    properties:\r\n      avatar:\r\n        $ref: '#/definitions/common.Image'\r\n      created_at:\r\n        type: string\r\n      first_name:\r\n        type: string\r\n      follower_count:\r\n        type: integer\r\n      following_count:\r\n        type: integer\r\n      id:\r\n        $ref: '#/definitions/common.UID'\r\n      last_name:\r\n        type: string\r\n      post_count:\r\n        type: integer\r\n      status:\r\n        type: integer\r\n      updated_at:\r\n        type: string\r\n    type: object\r\n  common.UID:\r\n    type: object\r\n  common.successRes:\r\n    properties:\r\n      data: {}\r\n      filter: {}\r\n      paging: {}\r\n    type: object\r\n  postmodel.PostCreate:\r\n    properties:\r\n      caption:\r\n        type: string\r\n      created_at:\r\n        type: string\r\n      id:\r\n        $ref: '#/definitions/common.UID'\r\n      img:\r\n        $ref: '#/definitions/common.Image'\r\n      status:\r\n        type: integer\r\n      updated_at:\r\n        type: string\r\n      user_id:\r\n        type: integer\r\n    type: object\r\n  postmodel.PostUpdate:\r\n    properties:\r\n      caption:\r\n        type: string\r\n      img:\r\n        $ref: '#/definitions/common.Image'\r\n    type: object\r\n  tokenprovider.Token:\r\n    properties:\r\n      created:\r\n        type: string\r\n      expiry:\r\n        type: integer\r\n      token:\r\n        type: string\r\n    type: object\r\n  usermodel.User:\r\n    properties:\r\n      avatar:\r\n        $ref: '#/definitions/common.Image'\r\n      created_at:\r\n        type: string\r\n      date_of_birth:\r\n        type: string\r\n      email:\r\n        type: string\r\n      first_name:\r\n        type: string\r\n      follower_count:\r\n        type: integer\r\n      following_count:\r\n        type: integer\r\n      id:\r\n        $ref: '#/definitions/common.UID'\r\n      last_name:\r\n        type: string\r\n      phone:\r\n        type: string\r\n      post_count:\r\n        type: integer\r\n      role:\r\n        type: string\r\n      status:\r\n        type: integer\r\n      updated_at:\r\n        type: string\r\n      user_name:\r\n        type: string\r\n    type: object\r\n  usermodel.UserCreate:\r\n    properties:\r\n      avatar:\r\n        $ref: '#/definitions/common.Image'\r\n      created_at:\r\n        type: string\r\n      date_of_birth:\r\n        type: string\r\n      email:\r\n        type: string\r\n      first_name:\r\n        type: string\r\n      id:\r\n        $ref: '#/definitions/common.UID'\r\n      last_name:\r\n        type: string\r\n      password:\r\n        type: string\r\n      phone:\r\n        type: string\r\n      role:\r\n        type: string\r\n      status:\r\n        type: integer\r\n      updated_at:\r\n        type: string\r\n      user_name:\r\n        type: string\r\n    type: object\r\n  usermodel.UserLogin:\r\n    properties:\r\n      email:\r\n        type: string\r\n      password:\r\n        type: string\r\n    type: object\r\n  usermodel.UserUpdate:\r\n    properties:\r\n      avatar:\r\n        $ref: '#/definitions/common.Image'\r\n      created_at:\r\n        type: string\r\n      date_of_birth:\r\n        type: string\r\n      email:\r\n        type: string\r\n      first_name:\r\n        type: string\r\n      id:\r\n        $ref: '#/definitions/common.UID'\r\n      last_name:\r\n        type: string\r\n      password:\r\n        type: string\r\n      phone:\r\n        type: string\r\n      status:\r\n        type: integer\r\n      updated_at:\r\n        type: string\r\n      user_name:\r\n        type: string\r\n    type: object\r\nhost: localhost:8080\r\ninfo:\r\n  contact:\r\n    email: support@swagger.io\r\n    name: API Support\r\n    url: http://www.swagger.io/support\r\n  description: This is a images social network.\r\n  license:\r\n    name: Apache 2.0\r\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\r\n  termsOfService: http://swagger.io/terms/\r\n  title: Swagger Insta API\r\n  version: \"1.0\"\r\npaths:\r\n  /comments/{id}:\r\n    delete:\r\n      consumes:\r\n      - application/json\r\n      description: Delete a comment by comment ID\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: id of the comment that user want to delete (encoded in uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Delete a comment\r\n      tags:\r\n      - comments\r\n  /comments/{id}/like:\r\n    post:\r\n      consumes:\r\n      - application/json\r\n      description: Create by comment ID\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: id of the comment that user want to like (encoded in uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Create a commentlike\r\n      tags:\r\n      - comments\r\n  /comments/{id}/unlike:\r\n    delete:\r\n      consumes:\r\n      - application/json\r\n      description: Delete by comment ID\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: id of the comment that user want to unlike (encoded in uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Delete a commentlike\r\n      tags:\r\n      - comments\r\n  /login:\r\n    post:\r\n      consumes:\r\n      - application/json\r\n      description: User login into account\r\n      parameters:\r\n      - description: account's information of user that want to log in\r\n        in: body\r\n        name: user\r\n        required: true\r\n        schema:\r\n          $ref: '#/definitions/usermodel.UserLogin'\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/tokenprovider.Token'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Login\r\n      tags:\r\n      - users\r\n  /posts:\r\n    post:\r\n      consumes:\r\n      - application/json\r\n      description: User creates new post\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: information of the post that user want to create\r\n        in: body\r\n        name: post\r\n        required: true\r\n        schema:\r\n          $ref: '#/definitions/postmodel.PostCreate'\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: CreatePost\r\n      tags:\r\n      - posts\r\n  /posts/{id}:\r\n    delete:\r\n      consumes:\r\n      - application/json\r\n      description: Delete by post ID\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: id of the post that user want to delete (encoded in uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Delete a post\r\n      tags:\r\n      - posts\r\n    patch:\r\n      consumes:\r\n      - application/json\r\n      description: User updates post\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: id of the post that user want to delete (encoded in uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: integer\r\n      - description: information of the post that user want to edit\r\n        in: body\r\n        name: post\r\n        required: true\r\n        schema:\r\n          $ref: '#/definitions/postmodel.PostUpdate'\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: UpdatePost\r\n      tags:\r\n      - posts\r\n  /posts/{id}/comment:\r\n    post:\r\n      consumes:\r\n      - application/json\r\n      description: Create by post ID\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: id of the post that user want to comment (encoded in uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      - description: content of comment\r\n        in: body\r\n        name: content\r\n        required: true\r\n        schema:\r\n          $ref: '#/definitions/commentmodel.CommentCreate'\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Create a comment\r\n      tags:\r\n      - posts\r\n  /posts/{id}/comments:\r\n    get:\r\n      consumes:\r\n      - application/json\r\n      description: Get all comment in a post\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: id of the post that user want to see all comments (encoded in\r\n          uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Get all comment\r\n      tags:\r\n      - posts\r\n  /posts/{id}/like:\r\n    post:\r\n      consumes:\r\n      - application/json\r\n      description: Create by post ID\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: id of the post that user want to like (encoded in uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Create a postlike\r\n      tags:\r\n      - posts\r\n  /posts/{id}/unlike:\r\n    delete:\r\n      consumes:\r\n      - application/json\r\n      description: Delete by post ID\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: id of the post that user want to unlike (encoded in uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Delete a postlike\r\n      tags:\r\n      - posts\r\n  /posts/comments/replies:\r\n    post:\r\n      consumes:\r\n      - application/json\r\n      description: User creates a reply\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: user reply comment\r\n        in: body\r\n        name: data\r\n        required: true\r\n        schema:\r\n          $ref: '#/definitions/commentmodel.CommentCreateRequest'\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: CreateReply\r\n      tags:\r\n      - posts\r\n  /posts/explore:\r\n    get:\r\n      consumes:\r\n      - application/json\r\n      description: Get all post\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      produces:\r\n      - application/json\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Get all post\r\n      tags:\r\n      - posts\r\n  /posts/explore/{id}:\r\n    get:\r\n      consumes:\r\n      - application/json\r\n      description: Get a post by id\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: id of post that user want to see (encoded in uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Get a post\r\n      tags:\r\n      - posts\r\n  /posts/explore/following:\r\n    get:\r\n      consumes:\r\n      - application/json\r\n      description: Get all posts of following\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Get all posts of following\r\n      tags:\r\n      - posts\r\n  /posts/searches:\r\n    post:\r\n      consumes:\r\n      - multipart/form-data\r\n      description: Get posts by searching\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - in: formData\r\n        name: caption\r\n        type: string\r\n      - in: formData\r\n        name: from\r\n        type: string\r\n      - in: formData\r\n        name: search_name\r\n        type: string\r\n      - in: formData\r\n        name: to\r\n        type: string\r\n      produces:\r\n      - application/json\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Search posts\r\n      tags:\r\n      - posts\r\n  /register:\r\n    post:\r\n      consumes:\r\n      - application/json\r\n      description: User create new account\r\n      parameters:\r\n      - description: information of user that need to create an account\r\n        in: body\r\n        name: user\r\n        required: true\r\n        schema:\r\n          $ref: '#/definitions/usermodel.UserCreate'\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: Register\r\n      tags:\r\n      - users\r\n  /users:\r\n    patch:\r\n      consumes:\r\n      - application/json\r\n      description: Users update their own account information\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: information that user want to update\r\n        in: body\r\n        name: user\r\n        required: true\r\n        schema:\r\n          $ref: '#/definitions/usermodel.UserUpdate'\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: UpdateProfile\r\n      tags:\r\n      - users\r\n  /users/{id}/follow:\r\n    post:\r\n      consumes:\r\n      - application/json\r\n      description: User follow another user\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: user id of other user that current user want to follow (encoded\r\n          to uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: UserFollowUser\r\n      tags:\r\n      - users\r\n  /users/{id}/unfollow:\r\n    delete:\r\n      consumes:\r\n      - application/json\r\n      description: User unfollow another user\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: user id of other user that current user want to unfollow (encoded\r\n          to uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.successRes'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: UserUnfollowUser\r\n      tags:\r\n      - users\r\n  /users/follower:\r\n    get:\r\n      consumes:\r\n      - application/json\r\n      description: List follower of current user\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: username, lastname or firstname of other user that current user\r\n          want to search in list follower\r\n        in: query\r\n        name: name\r\n        type: string\r\n      - description: limit records return in one page\r\n        in: query\r\n        name: limit\r\n        type: string\r\n      - description: used for paging purpose\r\n        in: query\r\n        name: cursor\r\n        type: string\r\n      produces:\r\n      - application/json\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            items:\r\n              $ref: '#/definitions/common.SimpleUser'\r\n            type: array\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: ListFollower\r\n      tags:\r\n      - users\r\n  /users/following:\r\n    get:\r\n      consumes:\r\n      - application/json\r\n      description: List following of current user\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: username, lastname or firstname of other user that current user\r\n          want to search in list following\r\n        in: query\r\n        name: name\r\n        type: string\r\n      - description: limit records return in one page\r\n        in: query\r\n        name: limit\r\n        type: string\r\n      - description: used for paging purpose\r\n        in: query\r\n        name: cursor\r\n        type: string\r\n      produces:\r\n      - application/json\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            items:\r\n              $ref: '#/definitions/common.SimpleUser'\r\n            type: array\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: ListFollowing\r\n      tags:\r\n      - users\r\n  /users/profile:\r\n    get:\r\n      consumes:\r\n      - application/json\r\n      description: Get profile of current user\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      produces:\r\n      - application/json\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/usermodel.User'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: GetProfile\r\n      tags:\r\n      - users\r\n  /users/profile/{id}:\r\n    get:\r\n      consumes:\r\n      - application/json\r\n      description: Get profile of another user by id\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: user id of other user that current user want to see profile (encoded\r\n          to uuid)\r\n        in: path\r\n        name: id\r\n        required: true\r\n        type: string\r\n      produces:\r\n      - application/json\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/common.SimpleUser'\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: GetOtherProfile\r\n      tags:\r\n      - users\r\n  /users/search/{searchKey}:\r\n    get:\r\n      consumes:\r\n      - application/json\r\n      description: Search other user by username, first name or last name\r\n      parameters:\r\n      - default: Bearer <Add access token here>\r\n        description: Insert your access token\r\n        in: header\r\n        name: Authorization\r\n        required: true\r\n        type: string\r\n      - description: username, lastname or firstname of other user that current user\r\n          want to search\r\n        in: path\r\n        name: searchKey\r\n        required: true\r\n        type: string\r\n      produces:\r\n      - application/json\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          schema:\r\n            items:\r\n              $ref: '#/definitions/common.SimpleUser'\r\n            type: array\r\n        \"400\":\r\n          description: Bad Request\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"404\":\r\n          description: Not Found\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n        \"500\":\r\n          description: Internal Server Error\r\n          schema:\r\n            $ref: '#/definitions/common.AppError'\r\n      summary: SearchUserByName\r\n      tags:\r\n      - users\r\nsecurityDefinitions:\r\n  BasicAuth:\r\n    type: basic\r\nswagger: \"2.0\"\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docs/swagger.yaml b/docs/swagger.yaml
--- a/docs/swagger.yaml	
+++ b/docs/swagger.yaml	
@@ -230,7 +230,7 @@
   title: Swagger Insta API
   version: "1.0"
 paths:
-  /comments/{id}:
+  /comments/{id}/{post_id}:
     delete:
       consumes:
       - application/json
@@ -245,6 +245,11 @@
       - description: id of the comment that user want to delete (encoded in uuid)
         in: path
         name: id
+        required: true
+        type: string
+      - description: post_id of the comment that user want to delete (encoded in uuid)
+        in: path
+        name: post_id
         required: true
         type: string
       responses:
diff --git a/subscriber/delete_comment_after_delete_post.go b/subscriber/delete_comment_commentlike_postlike_after_delete_post.go
rename from subscriber/delete_comment_after_delete_post.go
rename to subscriber/delete_comment_commentlike_postlike_after_delete_post.go
